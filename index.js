"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function Path(e){return console.assert(e,"decorator must have arguments, like \"@path('/test/:test')\""),function(r,t){pathMap.set(r.constructor,{regexp:e,propertyKey:t})}}function initMap(){console.log("--init route--");var e=config$1.getConfig(),r=e.controllerDir,t=e.controllerSuffix,o=new RegExp("([a-zA-Z0-9_]+)"+t+".js");console.assert(fs.existsSync(r),"controller filepath may need to be set, default:"+r),fs.readdirSync(r).forEach(function(e){var t=e.match(o);if(t){console.log(e);var n=require(path.resolve(r,e)),a=new n;if(pathMap.has(n)){var i=pathMap.get(n),l=i.regexp,c=i.propertyKey;regexpMap.set(pathToRegexp(l),{instance:a,method:c})}controllerMap.set(t[1].toLocaleLowerCase(),a)}})}function callMethod(e,r,t,o,n,a){e.ctx=o.app,e.req=o,e.res=n,e.next=a;var i=e.__before,l=e.__after,c=Promise.resolve();i&&(c=Promise.resolve(i.apply(e))),c.then(function(o){return!1!==o&&r.apply(e,t)}).then(function(r){return!1!==r&&(l&&l.apply(e),r)}).catch(function(e){console.log(e)})}function pathRegexp(e,r,t){var o=!0,n=!1,a=void 0;try{for(var i,l=regexpMap[Symbol.iterator]();!(o=(i=l.next()).done);o=!0){var c=slicedToArray(i.value,2),p=c[0],f=c[1],s=p.exec(e.path);if(s)return callMethod(f.instance,f.method,s,e,r,t),!0}}catch(e){n=!0,a=e}finally{try{!o&&l.return&&l.return()}finally{if(n)throw a}}return!1}function Router(e,r,t){if(!pathRegexp(e,r,t)){controllerMap.size||initMap();var o=e.path.slice(1)||"index";if(/^\d+$/.test(o))return t();var n=o.split("/"),a=toArray(n),i=a[0],l=void 0===i?"index":i,c=a[1],p=void 0===c?"index":c,f=a.slice(2),s=controllerMap.get(l);if(!s)return t();var u=s[p];if(!u)return t();callMethod(s,u,f,e,r,t)}}Object.defineProperty(exports,"__esModule",{value:!0});var fs=_interopDefault(require("fs")),path=_interopDefault(require("path")),pathToRegexp=_interopDefault(require("path-to-regexp")),pathMap=new Map,process=require("process"),config={controllerDir:path.resolve(process.cwd(),"src/controller"),controllerSuffix:"Controller"},config$1={setConfig:function(e){Object.assign(config,e)},getConfig:function(){return config}},slicedToArray=function(){function e(e,r){var t=[],o=!0,n=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(o=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);o=!0);}catch(e){n=!0,a=e}finally{try{!o&&l.return&&l.return()}finally{if(n)throw a}}return t}return function(r,t){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return e(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),toArray=function(e){return Array.isArray(e)?e:Array.from(e)},regexpMap=new Map,controllerMap=new Map,setConfig=config$1.setConfig;exports.Path=Path,exports.Router=Router,exports.setConfig=setConfig;
