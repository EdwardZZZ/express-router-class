"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}function Path(e){return console.assert(e,"decorator must have arguments, like \"@path('/test/:test')\""),function(t,o){pathMap.set(t.constructor,{regexp:e,propertyKey:o})}}function initMap(){console.log("--init route--");const{controllerDir:controllerDir,controllerSuffix:controllerSuffix,regexpFile:regexpFile}=config$1.getConfig(),e=new RegExp(`([a-zA-Z0-9_]+)${controllerSuffix}.js`);if(console.assert(fs.existsSync(controllerDir),`controller filepath may need to be set, default:${controllerDir}`),fs.readdirSync(controllerDir).forEach(t=>{const o=t.match(e);if(o){console.log(t);const e=require(path.resolve(controllerDir,t)),r=Reflect.construct(e,[]);if(pathMap.has(e)){const{regexp:regexp,propertyKey:propertyKey}=pathMap.get(e);regexpMap.set(pathToRegexp(regexp),{instance:r,method:r[propertyKey]})}controllerMap.set(o[1].toLocaleLowerCase(),r)}}),regexpFile){const e=require(regexpFile);Object.keys(e).forEach(t=>{const o=e[t].slice(1);const r=o.split("/");if(2!==r.length)return;const[n,c]=r;const i=controllerMap.get(n);if(!i)return;const s=i[c];if(!s)return;regexpMap.set(pathToRegexp(t),{instance:i,method:s})})}}function callMethod(e,t,o,r,n,c){e.ctx=r.app,e.req=r,e.res=n,e.next=c;const{__before:__before,__after:__after}=e;let i=Promise.resolve();__before&&(i=Promise.resolve(Reflect.apply(__before,e,[]))),i.then(r=>{if(!1===r)return!1;return Reflect.apply(t,e,o)}).then(t=>{if(!1===t)return!1;__after&&Reflect.apply(__after,e,[]);return t}).catch(e=>{console.log(e)})}function pathRegexp(e,t,o){for(let[r,n]of regexpMap){const c=r.exec(e.path);if(c){const{instance:instance,method:method}=n;return callMethod(instance,method,c.slice(1),e,t,o),!0}}return!1}function Router(e,t,o){if(controllerMap.size||initMap(),!pathRegexp(e,t,o)){const r=(e.path.slice(1)||"/index/index").split("/");if(r.length<2)return o();const[n,c,...i]=r;if(!c.indexOf("_"))return o();const s=controllerMap.get(n);if(!s)return o();const p=s[c];if(!p)return o();callMethod(s,p,i,e,t,o)}}Object.defineProperty(exports,"__esModule",{value:!0});var fs=_interopDefault(require("fs")),path=_interopDefault(require("path")),pathToRegexp=_interopDefault(require("path-to-regexp"));const pathMap=new Map,process=require("process"),config={controllerDir:path.resolve(process.cwd(),"src/controller"),controllerSuffix:"Controller",regexpFile:null};var config$1={setConfig(e){Object.assign(config,e)},getConfig(){return config}};const regexpMap=new Map,controllerMap=new Map,{setConfig:setConfig}=config$1;exports.Path=Path,exports.Router=Router,exports.setConfig=setConfig;
